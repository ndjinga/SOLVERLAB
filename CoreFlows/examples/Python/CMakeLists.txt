############# python example tests

function(CreatePythonTest pythonFile testLabels)
    add_test(NAME ${pythonFile} COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/${pythonFile})
    if(    ${PRELOAD_NETCDF_ON_UBUNTU20}  )
      SET_PROPERTY(TEST ${pythonFile}        PROPERTY ENVIRONMENT LD_PRELOAD=${NETCDF_LIBRARY_ON_UBUNTU20} )
    endif( ${PRELOAD_NETCDF_ON_UBUNTU20}  )
#    SET_PROPERTY(TEST ${pythonFile}        PROPERTY ENVIRONMENT LD_LIBRARY_PATH=${TESTS_LIBRARY_PATH} )
#    SET_PROPERTY(TEST ${pythonFile} APPEND PROPERTY ENVIRONMENT      PYTHONPATH=${TESTS_PYTHON_PATH}  )
    set_property(TEST ${pythonFile} PROPERTY LABELS ${testLabels})     
    install(FILES ${pythonFile} DESTINATION share/examples)
endfunction(CreatePythonTest)

# copy all *.py tests files before build
file(GLOB pythonTestFiles "*.py" )
file(COPY ${pythonTestFiles} DESTINATION ${CMAKE_CURRENT_BINARY_DIR} 
    FILE_PERMISSIONS OWNER_EXECUTE OWNER_READ OWNER_WRITE
)

CreatePythonTest(DiffusionEquation/DiffusionEquation_1DHeatedRod.py "Python fv diffusion 1D heating structured coreflows")
CreatePythonTest(DiffusionEquation/DiffusionEquation_1DHeatedRod_FE.py "Python fe diffusion 1D heating structured coreflows")
set(FE 1)
set(FV 0)
set(DirichletBC 1)
set(NeumannBC 0)
add_test(DiffusionEquation/DiffusionEquation_2DSpherical_FE ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/DiffusionEquation/DiffusionEquation_2DSpherical.py ${FE})
  set_property (TEST DiffusionEquation/DiffusionEquation_2DSpherical_FE PROPERTY LABELS "Python fe diffusion riemann 2D heating structured coreflows")     
add_test(DiffusionEquation/DiffusionEquation_2DSpherical_FV ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/DiffusionEquation/DiffusionEquation_2DSpherical.py ${FV})
  set_property (TEST DiffusionEquation/DiffusionEquation_2DSpherical_FV PROPERTY LABELS "Python fv diffusion riemann 2D heating structured coreflows")     
add_test(DiffusionEquation/DiffusionEquation_2D_SQUARE_Neumann_FV ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/DiffusionEquation/DiffusionEquation_2D_SQUARE.py ${FV} ${NeumannBC})
  set_property (TEST DiffusionEquation/DiffusionEquation_2D_SQUARE_Neumann_FV PROPERTY LABELS "Python fv diffusion 3D SQUARE heating structured squares coreflows Neumann")  
add_test(DiffusionEquation/DiffusionEquation_2D_SQUARE_Neumann_FE ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/DiffusionEquation/DiffusionEquation_2D_SQUARE.py ${FE} ${NeumannBC})
  set_property (TEST DiffusionEquation/DiffusionEquation_2D_SQUARE_Neumann_FE PROPERTY LABELS "Python fe diffusion 3D SQUARE heating structured triangles coreflows Neumann")  
add_test(DiffusionEquation/DiffusionEquation_2D_SQUARE_Dirichlet_FV ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/DiffusionEquation/DiffusionEquation_2D_SQUARE.py ${FV} ${DirichletBC})
  set_property (TEST DiffusionEquation/DiffusionEquation_2D_SQUARE_Dirichlet_FV PROPERTY LABELS "Python fv diffusion 3D SQUARE heating structured squares coreflows Dirichlet")  
add_test(DiffusionEquation/DiffusionEquation_2D_SQUARE_Dirichlet_FE ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/DiffusionEquation/DiffusionEquation_2D_SQUARE.py ${FE} ${DirichletBC})
  set_property (TEST DiffusionEquation/DiffusionEquation_2D_SQUARE_Dirichlet_FE PROPERTY LABELS "Python fe diffusion 3D SQUARE heating structured triangles coreflows Dirichlet")  
add_test(DiffusionEquation/DiffusionEquation_3D_BALL_Neumann_FV ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/DiffusionEquation/DiffusionEquation_3D_BALL_Neumann.py ${FV} ${NeumannBC})
  set_property (TEST DiffusionEquation/DiffusionEquation_3D_BALL_Neumann_FV PROPERTY LABELS "Python fv diffusion 3D BALL heating unstructured tetrahedra coreflows Neumann")  
add_test(DiffusionEquation/DiffusionEquation_3D_BALL_Neumann_FE ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/DiffusionEquation/DiffusionEquation_3D_BALL_Neumann.py ${FE} ${NeumannBC})
  set_property (TEST DiffusionEquation/DiffusionEquation_3D_BALL_Neumann_FE PROPERTY LABELS "Python fe diffusion 3D BALL heating unstructured tetrahedra coreflows Neumann")  
add_test(DiffusionEquation/DiffusionEquation_3D_BALL_Dirichet_FV ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/DiffusionEquation/DiffusionEquation_3D_BALL_Dirichlet.py ${FV} ${NeumannBC})
  set_property (TEST DiffusionEquation/DiffusionEquation_3D_BALL_Dirichet_FV PROPERTY LABELS "Python fv diffusion 3D BALL heating unstructured tetrahedra coreflows Dirichlet")  
add_test(DiffusionEquation/DiffusionEquation_3D_BALL_Dirichet_FE ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/DiffusionEquation/DiffusionEquation_3D_BALL_Dirichlet.py ${FE} ${NeumannBC})
  set_property (TEST DiffusionEquation/DiffusionEquation_3D_BALL_Dirichet_FE PROPERTY LABELS "Python fe diffusion 3D BALL heating unstructured tetrahedra coreflows Dirichlet")  


CreatePythonTest(TransportEquation/TransportEquation_1DHeatedChannel.py "Python fv transport 1D heating structured coreflows")
add_test(TransportEquation/TransportEquation_2DSpherical ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/TransportEquation/TransportEquation_2DSpherical.py "Python fv transport 2D riemann structured coreflows" )

CreatePythonTest(IsothermalSinglePhase/IsothermalSinglePhase_1DRiemannProblem.py "Python fv isothermalsinglephase 1D riemann explicit upwind structured coreflows")
CreatePythonTest(IsothermalSinglePhase/Dispersion.py "Dispersion")
CreatePythonTest(IsothermalSinglePhase/IsothermalSinglePhase_1DRiemannProblem_Implicit.py "Python fv isothermalsinglephase 1D riemann implicit upwind structured coreflows")
CreatePythonTest(IsothermalSinglePhase/IsothermalSinglePhase_1DRiemannProblem_Centered.py "Python fv isothermalsinglephase 1D riemann implicit centered structured coreflows")
CreatePythonTest(IsothermalSinglePhase/IsothermalSinglePhase_1DRiemannProblem_PStaggered.py "Python fv isothermalsinglephase 1D riemann implicit pstaggered structured coreflows")
CreatePythonTest(IsothermalSinglePhase/IsothermalSinglePhase_1DRiemannProblem_PStaggered_symmetric.py "Python fv isothermalsinglephase 1D riemann implicit pstaggered structured coreflows")
CreatePythonTest(IsothermalSinglePhase/IsothermalSinglePhase_2DRiemannProblem_PStaggered_symmetric.py "Python fv isothermalsinglephase 2D riemann implicit pstaggered structured coreflows")
CreatePythonTest(IsothermalSinglePhase/IsothermalSinglePhase_2DRiemannProblem_PStaggered_oblique.py "Python fv isothermalsinglephase 2D riemann implicit pstaggered structured coreflows")
CreatePythonTest(IsothermalSinglePhase/IsothermalSinglePhase_1DChannelGravity_upwind.py "Python fv isothermalsinglephase 1D gravity implicit upwind structured coreflows")
CreatePythonTest(IsothermalSinglePhase/IsothermalSinglePhase_1DChannelGravity_Incompressible.py "Python fv isothermalsinglephase 1D gravity implicit pstaggered inlet outlet structured coreflows")
CreatePythonTest(IsothermalSinglePhase/IsothermalSinglePhase_1DChannelGravity_Incompressible_Wall.py "Python fv isothermalsinglephase 1D gravity implicit pstaggered wall structured coreflows")
CreatePythonTest(IsothermalSinglePhase/IsothermalSinglePhase_2DLidDrivenCavity.py  "Python fv isothermalsinglephase 2D viscosity implicit pstaggered wall structured coreflows")
CreatePythonTest(IsothermalSinglePhase/IsothermalSinglePhase_2DPoiseuilleFlow_Incompressible.py  "Python fv isothermalsinglephase 2D viscosity implicit pstaggered wall neumann structured coreflows")
SET(MESH_FILE ${COREFLOWS_MESHES}/SinusoidalBump/bump_40x10_hexaedre.med )
SET(MESH_NAME SinusoidalBump_Hexa )
SET(SCHEME upwind)
add_test(IsothermalSinglePhase_2DSinusoidalBump_Hexa_Compressible_upwind ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/IsothermalSinglePhase/IsothermalSinglePhase_2DChannel_Compressible.py ${MESH_FILE} ${MESH_NAME} ${SCHEME} )
  set_property (TEST IsothermalSinglePhase_2DSinusoidalBump_Hexa_Compressible_upwind PROPERTY LABELS  "Python fv isothermalsinglephase 2D bump implicit upwind hexa wall neumann structured coreflows")
SET(SCHEME centered)
add_test(IsothermalSinglePhase_2DSinusoidalBump_Hexa_Compressible_centered ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/IsothermalSinglePhase/IsothermalSinglePhase_2DChannel_Compressible.py ${MESH_FILE} ${MESH_NAME} ${SCHEME} )
  set_property (TEST IsothermalSinglePhase_2DSinusoidalBump_Hexa_Compressible_centered PROPERTY LABELS  "Python fv isothermalsinglephase 2D bump implicit centered hexa wall neumann structured coreflows")
SET(SCHEME staggered)
add_test(IsothermalSinglePhase_2DSinusoidalBump_Hexa_Compressible_staggered ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/IsothermalSinglePhase/IsothermalSinglePhase_2DChannel_Compressible.py ${MESH_FILE} ${MESH_NAME} ${SCHEME} )
  set_property (TEST IsothermalSinglePhase_2DSinusoidalBump_Hexa_Compressible_staggered PROPERTY LABELS  "Python fv isothermalsinglephase 2D bump implicit staggered hexa wall neumann structured coreflows")
SET(MESH_FILE ${COREFLOWS_MESHES}/SinusoidalBump/bump_40x10_triangle.med )
SET(MESH_NAME SinusoidalBump_Triangles )
SET(SCHEME upwind)
add_test(IsothermalSinglePhase_2DSinusoidalBump_Triangles_Compressible_upwind ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/IsothermalSinglePhase/IsothermalSinglePhase_2DChannel_Compressible.py ${MESH_FILE} ${MESH_NAME} ${SCHEME} )
  set_property (TEST IsothermalSinglePhase_2DSinusoidalBump_Triangles_Compressible_upwind PROPERTY LABELS  "Python fv isothermalsinglephase 2D bump implicit upwind triangles wall neumann unstructured coreflows")
SET(SCHEME centered)
add_test(IsothermalSinglePhase_2DSinusoidalBump_Triangles_Compressible_centered ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/IsothermalSinglePhase/IsothermalSinglePhase_2DChannel_Compressible.py ${MESH_FILE} ${MESH_NAME} ${SCHEME} )
  set_property (TEST IsothermalSinglePhase_2DSinusoidalBump_Triangles_Compressible_centered PROPERTY LABELS  "Python fv isothermalsinglephase 2D bump implicit centered triangles wall neumann structured coreflows")
SET(SCHEME staggered)
add_test(IsothermalSinglePhase_2DSinusoidalBump_Triangles_Compressible_staggered ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/IsothermalSinglePhase/IsothermalSinglePhase_2DChannel_Compressible.py ${MESH_FILE} ${MESH_NAME} ${SCHEME} )
  set_property (TEST IsothermalSinglePhase_2DSinusoidalBump_Triangles_Compressible_staggered PROPERTY LABELS  "Python fv isothermalsinglephase 2D bump implicit staggered triangles wall neumann structured coreflows")

CreatePythonTest(SinglePhase/SinglePhase_1DDepressurisation.py "Python fv singlephase 1D depressurisation structured coreflows")
CreatePythonTest(SinglePhase/SinglePhase_1DHeatedAssembly.py "Python fv singlephase 1D heating structured coreflows")
CreatePythonTest(SinglePhase/SinglePhase_1DHeatedChannel.py "Python fv singlephase 1D heating structured coreflows")
CreatePythonTest(SinglePhase/SinglePhase_1DHeatedChannel_Implicit.py "Python fv singlephase 1D heating implicit structured coreflows")
CreatePythonTest(SinglePhase/SinglePhase_1DRiemannProblem.py "Python fv singlephase 1D riemann structured coreflows")
CreatePythonTest(SinglePhase/SinglePhase_1DRiemannProblem_Implicit.py "Python fv singlephase 1D riemann implicit structured coreflows")
CreatePythonTest(SinglePhase/SinglePhase_1DRiemannProblem_Implicit_LineSearch.py "Python fv singlephase 1D riemann implicit linesearch structured coreflows")
CreatePythonTest(SinglePhase/SinglePhase_1DWaterHammer.py "Python fv singlephase 1D structured coreflows")
CreatePythonTest(SinglePhase/SinglePhase_2BranchesHeatedChannels.py "Python fv singlephase 1D branches heating unstructured coreflows")
CreatePythonTest(SinglePhase/SinglePhase_2DVidangeReservoir.py "Python fv singlephase 2D gravity drainage structured coreflows")
CreatePythonTest(SinglePhase/SinglePhase_2DLidDrivenCavity.py "Python fv singlephase 2D viscosity structured squares coreflows")
CreatePythonTest(SinglePhase/SinglePhase_2DLidDrivenCavity_unstructured.py "Python fv singlephase 2D viscosity unstructured squares coreflows")
CreatePythonTest(SinglePhase/SinglePhase_2DPoiseuilleFlow.py "Python fv singlephase 2D viscosity structured squares coreflows")
CreatePythonTest(SinglePhase/SinglePhase_2DPoiseuilleFlow_restart.py "Python fv singlephase 2D viscosity restart structured squares coreflows")
CreatePythonTest(SinglePhase/SinglePhase_2DPoiseuilleFlow_outputFields.py "Python fv singlephase 2D viscosity output structured squares coreflows")
CreatePythonTest(SinglePhase/SinglePhase_2DAirfoil.py "Python fv singlephase 2D viscosity obstacle unstructured coreflows")
CreatePythonTest(SinglePhase/SinglePhase_2DSphericalExplosion_unstructured.py "Python fv singlephase 2D riemann unstructured triangles CUBE coreflows")
CreatePythonTest(SinglePhase/SinglePhase_2DSphericalExplosion_HEXAGON.py "Python fv singlephase 2D riemann unstructured triangles HEXAGON coreflows")
CreatePythonTest(SinglePhase/SinglePhase_3DSphericalExplosion_TETRAHEDRON.py "Python fv singlephase 3D riemann unstructured tetrahedra TETRAHEDRA coreflows")
CreatePythonTest(SinglePhase/SinglePhase_3DSphericalExplosion_unstructured.py "Python fv singlephase 3D riemann unstructured tetrahedra CUBE coreflows")
CreatePythonTest(SinglePhase/SinglePhase_2DHeatedChannelInclined.py "Python fv singlephase 2D heating structured squares inclined coreflows")
CreatePythonTest(SinglePhase/SinglePhase_2DThermalDiffusion.py "Python fv singlephase 2D heating structured squares coreflows")
CreatePythonTest(SinglePhase/SinglePhase_2DWallHeatedChannel_ChangeSect.py "Python fv singlephase 2D heating structured squares coreflows")
CreatePythonTest(SinglePhase/SinglePhase_3DHeatDrivenCavity.py "Python fv singlephase 3D heating structured cubes coreflows")
CreatePythonTest(SinglePhase/SinglePhase_3DVortexTube_NoCone_NoViscosity.py "Python fv singlephase 3D unstructured hexahedra coreflows")
CreatePythonTest(SinglePhase/SinglePhase_3DVortexTube_WithCone_NoViscosity.py "Python fv singlephase 3D unstructured hexahedra coreflows")

CreatePythonTest(DriftModel/DriftModel_1DBoilingAssembly.py "Python fv driftmodel 1D heating boiling structured coreflows")
CreatePythonTest(DriftModel/DriftModel_1DBoilingChannel.py "Python fv driftmodel 1D heating boiling structured coreflows")
CreatePythonTest(DriftModel/DriftModel_1DChannelGravity.py "Python fv driftmodel 1D gravity structured coreflows" )
CreatePythonTest(DriftModel/DriftModel_1DDepressurisation.py "Python fv driftmodel 1D depressurisation structured coreflows")
CreatePythonTest(DriftModel/DriftModel_1DPorosityJump.py "Python fv driftmodel 1D porosity structured")
CreatePythonTest(DriftModel/DriftModel_1DPressureLoss.py "Python fv driftmodel 1D pressureloss structured coreflows")
CreatePythonTest(DriftModel/DriftModel_1DRiemannProblem.py "Python fv driftmodel 1D riemann structured coreflows")
CreatePythonTest(DriftModel/DriftModel_1DVidangeReservoir.py "Python fv driftmodel 1D gravity drainage structured coreflows")
CreatePythonTest(DriftModel/DriftModel_2BranchesBoilingChannels.py "Python fv driftmodel 1D branches heating unstructured coreflows")
CreatePythonTest(DriftModel/DriftModel_2DInclinedChannelGravity.py "Python fv driftmodel 2D gravity structured inclined coreflows")
CreatePythonTest(DriftModel/DriftModel_2DInclinedChannelGravityTriangles.py "Python fv driftmodel 2D gravity triangles inclined coreflows")
CreatePythonTest(DriftModel/DriftModel_2DInclinedChannelGravityBarriers.py "Python fv driftmodel 2D gravity barrier structured inclined coreflows")
CreatePythonTest(DriftModel/DriftModel_2DBoilingChannelBarrier.py "Python fv driftmodel 2D heating boiling structured barrier coreflows")
CreatePythonTest(DriftModel/DriftModel_2DInclinedBoilingChannelBarrier.py "Python fv driftmodel 2D heating boiling barrier structured inclined coreflows")
CreatePythonTest(DriftModel/DriftModel_2DInclinedBoilingChannel.py "Python fv driftmodel 2D heating boiling structured inclined coreflows")
CreatePythonTest(DriftModel/DriftModel_2DPorosityJump.py "Python fv driftmodel 2D porosity structured")
CreatePythonTest(DriftModel/DriftModel_2DPressureLoss.py "Python fv driftmodel 2D pressureloss structured coreflows")
CreatePythonTest(DriftModel/DriftModel_2DVidangeReservoir.py "Python fv driftmodel 2D gravity drainage structured coreflows")
CreatePythonTest(DriftModel/DriftModel_2DVidangeReservoirUnstructured.py "Python fv driftmodel 2D gravity drainage unstructured coreflows")
CreatePythonTest(DriftModel/DriftModel_3DBoilingChannelBarrier.py "Python fv driftmodel 3D heating boiling structured barrier coreflows")

CreatePythonTest(IsothermalTwoFluid/IsothermalTwoFluid_1DSedimentation.py "Python fv isothermaltwofluid 1D gravity sedimentation structured coreflows")
CreatePythonTest(IsothermalTwoFluid/IsothermalTwoFluid_1DVidangeReservoir.py "Python fv isothermaltwofluid 1D gravity drainage structured coreflows")
CreatePythonTest(IsothermalTwoFluid/IsothermalTwoFluid_2DVidangeReservoir.py "Python fv isothermaltwofluid 2D gravity drainage structured coreflows")

CreatePythonTest(FiveEqsTwoFluid/FiveEqsTwoFluid_1DBoilingAssembly.py "Python fv fiveqs 1D heating boiling structured coreflows")
CreatePythonTest(FiveEqsTwoFluid/FiveEqsTwoFluid_1DBoilingChannel.py "Python fv fiveqs 1D heating boiling structured coreflows")
CreatePythonTest(FiveEqsTwoFluid/FiveEqsTwoFluid_1DVidangeReservoir.py "Python fv fiveqs 1D gravity drainage structured coreflows")
CreatePythonTest(FiveEqsTwoFluid/FiveEqsTwoFluid_2DInclinedBoilingChannel.py "Python fv fiveqs 2D heating boiling structured inclined coreflows")
CreatePythonTest(FiveEqsTwoFluid/FiveEqsTwoFluid_2DInclinedSedimentation.py "Python fv fiveqs 2D gravity sedimentation structured inclined coreflows")
CreatePythonTest(FiveEqsTwoFluid/FiveEqsTwoFluid_2DVidangeReservoir.py "Python fv fiveqs 2D gravity drainage structured coreflows")

CreatePythonTest(StationaryDiffusionEquation/StationaryDiffusionEquation_2DEF.py "Python fe stationary diffusion 2D dirichlet unstructured triangles coreflows")
CreatePythonTest(StationaryDiffusionEquation/StationaryDiffusionEquation_2DEF_Neumann.py "Python fe stationary diffusion 2D neumann unstructured triangles coreflows")
CreatePythonTest(StationaryDiffusionEquation/StationaryDiffusionEquation_2DFV_StructuredTriangles.py "Python fv stationary diffusion 2D dirichlet structured triangles coreflows")
CreatePythonTest(StationaryDiffusionEquation/StationaryDiffusionEquation_2DFV_EquilateralTriangles.py "Python fv stationary diffusion 2D dirichlet structured equilateral triangles coreflows")
CreatePythonTest(StationaryDiffusionEquation/StationaryDiffusionEquation_2DFV_StructuredSquares.py "Python fv stationary diffusion 2D dirichlet structured squares coreflows")
CreatePythonTest(StationaryDiffusionEquation/StationaryDiffusionEquation_2DFV_StructuredSquares_Neumann.py "Python fv stationary diffusion 2D neumann structured squares coreflows")
CreatePythonTest(StationaryDiffusionEquation/StationaryDiffusionEquation_3DEF.py "Python fe stationary diffusion 3D dirichlet unstructured tetrahedra CUBE coreflows")
CreatePythonTest(StationaryDiffusionEquation/StationaryDiffusionEquation_3DEF_Neumann.py "Python fe stationary diffusion 3D neumann unstructured tetrahedra BALL coreflows")
CreatePythonTest(StationaryDiffusionEquation/StationaryDiffusionEquation_3DFV_StructuredCubes.py "Python fv stationary diffusion 3D dirichlet structured cubes CUBE coreflows")
CreatePythonTest(StationaryDiffusionEquation/StationaryDiffusionEquation_3DFV_StructuredTetrahedra.py "Python fv stationary diffusion 3D dirichlet structured tetrahedra CUBE coreflows")
CreatePythonTest(StationaryDiffusionEquation/StationaryDiffusionEquation_3DEF_RoomCooling.py "Python fe stationary diffusion 3D dirichlet unstructured tetrahedra CUBE coreflows")
CreatePythonTest(StationaryDiffusionEquation/StationaryDiffusionEquation_3DVF_RoomCooling_StructuredCubes.py "Python fv stationary diffusion 3D dirichlet unstructured cubes CUBE coreflows")
CreatePythonTest(StationaryDiffusionEquation/StationaryDiffusionEquation_3DVF_RoomCooling_UnstructuredTetras.py "Python fv stationary diffusion 3D dirichlet unstructured tetrahedra CUBE coreflows")


CreatePythonTest(WaveStaggered/WaveStaggered_Statio.py "Python fv Wave staggered 1D Riemann Problem structured coreflows")
CreatePythonTest(WaveStaggered/WaveStaggered_1DRiemannProblem.py "Python fv Wave staggered 1D Riemann Problem structured coreflows")
CreatePythonTest(WaveStaggered/WaveStaggered_2DRiemannX_StructuredSquares.py "Python fv Wave staggered 2D Riemann X structured coreflows")
CreatePythonTest(WaveStaggered/WaveStaggered_2DRiemannY_StructuredSquares.py "Python fv Wave staggered 2D Riemann Y structured coreflows")
CreatePythonTest(WaveStaggered/WaveStaggered_2D_StructuredSquares.py "Python fv Wave staggered structured coreflows")

if( SOLVERLAB_WITH_MPI )
  add_test(NAME MPI4PY_2Procs                                        COMMAND "${MPIEXEC}" "-n" "2" "${PYTHON_EXECUTABLE}" "${CMAKE_CURRENT_SOURCE_DIR}/MPI4PY/testMPI4PY.py")     
    set_property (TEST MPI4PY_2Procs PROPERTY LABELS "Python mpi 2Proc")     
  add_test(NAME StationaryDiffusion_TwoIndependentSimulations_2Procs COMMAND "${MPIEXEC}" "-n" "2" "${PYTHON_EXECUTABLE}" "${CMAKE_CURRENT_SOURCE_DIR}/MPI4PY/testTwoSimulations.py")     
    set_property (TEST StationaryDiffusion_TwoIndependentSimulations_2Procs PROPERTY LABELS "Python mpi 2Proc stationary diffusion")     
  add_test(NAME StationaryDiffusion_2D_FE_SQUARE_MPI_2Procs COMMAND "${MPIEXEC}" "-n" "2" "${PYTHON_EXECUTABLE}" "${CMAKE_CURRENT_SOURCE_DIR}/MPI4PY/StationaryDiffusionEquation_2D_FE_SQUARE_MPI.py")     
    set_property (TEST StationaryDiffusion_2D_FE_SQUARE_MPI_2Procs PROPERTY LABELS "Python mpi 2Proc stationary diffusion")     
  add_test(NAME Diffusion_2D_FE_SQUARE_MPI_2Procs COMMAND "${MPIEXEC}" "-n" "2" "${PYTHON_EXECUTABLE}" "${CMAKE_CURRENT_SOURCE_DIR}/MPI4PY/DiffusionEquation_2D_FE_SQUARE_MPI.py")     
    set_property (TEST Diffusion_2D_FE_SQUARE_MPI_2Procs PROPERTY LABELS "Python mpi 2Proc diffusion")     
  add_test(NAME SendRecvMEDCouplingFieldSameMesh_2Procs              COMMAND "${MPIEXEC}" "-n" "2" "${PYTHON_EXECUTABLE}" "${CMAKE_CURRENT_SOURCE_DIR}/MPI4PY/testSendRecvFieldSameMesh.py")     
    set_property (TEST SendRecvMEDCouplingFieldSameMesh_2Procs PROPERTY LABELS "Python mpi 2Proc medcoupling")     
  add_test(NAME SendRecvMEDCouplingFieldDifferentMeshes_2Procs       COMMAND "${MPIEXEC}" "-n" "2" "${PYTHON_EXECUTABLE}" "${CMAKE_CURRENT_SOURCE_DIR}/MPI4PY/testSendRecvFieldDifferentMeshes.py")     
    set_property (TEST SendRecvMEDCouplingFieldDifferentMeshes_2Procs PROPERTY LABELS "Python mpi 2Proc medcoupling")     
  add_test(NAME SendRecvMEDCouplingFieldSubComm_4Procs               COMMAND "${MPIEXEC}" "-n" "4" "${PYTHON_EXECUTABLE}" "${CMAKE_CURRENT_SOURCE_DIR}/MPI4PY/testSendRecvFieldSubComm.py")     
    set_property (TEST SendRecvMEDCouplingFieldSubComm_4Procs PROPERTY LABELS "Python mpi 4Proc medcoupling subcomm")     
endif( SOLVERLAB_WITH_MPI )

############# python convergence tests

function(CreatePythonConvergenceTest model convergenceTest pythonSolver MESHES_AND_PICTURES_PATH)
    FILE(GLOB MY_MESHES_AND_PICTURES  MESHES_AND_PICTURES_PATH )
    file(COPY convergence_${model}_${convergenceTest}.py ../${pythonSolver} ${MY_MESHES_AND_PICTURES} DESTINATION ${CMAKE_CURRENT_BINARY_DIR} FILE_PERMISSIONS OWNER_EXECUTE OWNER_READ OWNER_WRITE )

    add_test(convergence_${model}_${convergenceTest} ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/convergence_${model}_${convergenceTest}.py)
    #SET_PROPERTY(TEST convergence_${model}_${convergenceTest}        PROPERTY ENVIRONMENT LD_LIBRARY_PATH=${TESTS_LIBRARY_PATH} )
    #SET_PROPERTY(TEST convergence_${model}_${convergenceTest} APPEND PROPERTY ENVIRONMENT      PYTHONPATH=${TESTS_PYTHON_PATH} )
    set_property (TEST convergence_${model}_${convergenceTest} PROPERTY LABELS "convergence")     

endfunction(CreatePythonConvergenceTest)

add_subdirectory (Convergence/StationaryDiffusion)
add_subdirectory (Convergence/SinglePhase)

